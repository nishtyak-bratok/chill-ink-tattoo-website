# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
Write-Host "üñºÔ∏è –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ImageMagick
$magickPath = Get-Command magick -ErrorAction SilentlyContinue
if (-not $magickPath) {
    Write-Host "‚ö†Ô∏è ImageMagick –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ Chocolatey..." -ForegroundColor Yellow
    try {
        choco install imagemagick -y
        Write-Host "‚úÖ ImageMagick —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ImageMagick. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é." -ForegroundColor Red
        Write-Host "–°–∫–∞—á–∞–π—Ç–µ —Å: https://imagemagick.org/script/download.php" -ForegroundColor White
        exit 1
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function Optimize-Image {
    param(
        [string]$InputPath,
        [string]$OutputPath,
        [int]$Quality = 85,
        [int]$MaxWidth = 1200
    )
    
    try {
        # –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        magick $InputPath -resize "${MaxWidth}x>" -quality $Quality -strip $OutputPath
        Write-Host "  ‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: $InputPath" -ForegroundColor Green
        return $true
    } catch {
        Write-Host "  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: $InputPath" -ForegroundColor Red
        return $false
    }
}

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
$optimizedPath = "optimized"
if (!(Test-Path $optimizedPath)) {
    New-Item -ItemType Directory -Path $optimizedPath -Force
    Write-Host "üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π" -ForegroundColor Cyan
}

# –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–æ–≤
Write-Host "`nüë®‚Äçüé® –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–æ–≤..." -ForegroundColor Cyan

$masters = @("renoit", "rocket")
foreach ($master in $masters) {
    $galleryPath = "gallery\$master"
    $optimizedMasterPath = "$optimizedPath\$master"
    
    if (!(Test-Path $optimizedMasterPath)) {
        New-Item -ItemType Directory -Path $optimizedMasterPath -Force
    }
    
    if (Test-Path $galleryPath) {
        $images = Get-ChildItem "$galleryPath\*.jpg" | Sort-Object Name
        foreach ($image in $images) {
            $outputPath = "$optimizedMasterPath\$($image.Name)"
            Optimize-Image -InputPath $image.FullName -OutputPath $outputPath
        }
    }
}

# –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
Write-Host "`nüé® –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ..." -ForegroundColor Cyan

$portfolioImages = Get-ChildItem "portfolio-*.jpg" | Sort-Object Name
foreach ($image in $portfolioImages) {
    $outputPath = "$optimizedPath\$($image.Name)"
    Optimize-Image -InputPath $image.FullName -OutputPath $outputPath
}

# –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–æ—Ç–∏–ø
Write-Host "`nüè∑Ô∏è –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–æ—Ç–∏–ø..." -ForegroundColor Cyan
if (Test-Path "logo.png") {
    Optimize-Image -InputPath "logo.png" -OutputPath "$optimizedPath\logo.png" -Quality 90
}

# –°–æ–∑–¥–∞–µ–º WebP –≤–µ—Ä—Å–∏–∏ –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
Write-Host "`nüåê –°–æ–∑–¥–∞–µ–º WebP –≤–µ—Ä—Å–∏–∏..." -ForegroundColor Cyan

function Convert-ToWebP {
    param(
        [string]$InputPath,
        [string]$OutputPath
    )
    
    try {
        magick $InputPath -quality 85 -define webp:lossless=false $OutputPath
        Write-Host "  ‚úÖ WebP —Å–æ–∑–¥–∞–Ω: $OutputPath" -ForegroundColor Green
        return $true
    } catch {
        Write-Host "  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ WebP: $InputPath" -ForegroundColor Red
        return $false
    }
}

# –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ WebP
Get-ChildItem "$optimizedPath\**\*.jpg" | ForEach-Object {
    $webpPath = $_.FullName -replace '\.jpg$', '.webp'
    Convert-ToWebP -InputPath $_.FullName -OutputPath $webpPath
}

# –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç –æ–± –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
$report = @"
# –û—Ç—á–µ—Ç –æ–± –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

## –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

### –ò—Å—Ö–æ–¥–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:
"@

$totalOriginalSize = 0
$totalOptimizedSize = 0

# –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
Get-ChildItem "gallery\**\*.jpg", "portfolio-*.jpg", "logo.png" | ForEach-Object {
    $totalOriginalSize += $_.Length
}

Get-ChildItem "$optimizedPath\**\*" | ForEach-Object {
    $totalOptimizedSize += $_.Length
}

$savings = $totalOriginalSize - $totalOptimizedSize
$savingsPercent = [math]::Round(($savings / $totalOriginalSize) * 100, 2)

$report += @"

- –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –∏—Å—Ö–æ–¥–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: $([math]::Round($totalOriginalSize / 1MB, 2)) MB
- –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: $([math]::Round($totalOptimizedSize / 1MB, 2)) MB
- –≠–∫–æ–Ω–æ–º–∏—è –º–µ—Å—Ç–∞: $([math]::Round($savings / 1MB, 2)) MB ($savingsPercent%)

## –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

1. –ó–∞–º–µ–Ω–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ WebP —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
3. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è lazy loading –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

## –§–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é

–í—Å–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ: $optimizedPath
"@

$report | Out-File "optimization_report.md" -Encoding UTF8

Write-Host "`nüìä –û—Ç—á–µ—Ç –æ–± –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω: optimization_report.md" -ForegroundColor Magenta
Write-Host "üíæ –≠–∫–æ–Ω–æ–º–∏—è –º–µ—Å—Ç–∞: $([math]::Round($savings / 1MB, 2)) MB ($savingsPercent%)" -ForegroundColor Green
Write-Host "üéâ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Magenta
